version: "4"

services:
  # PostgreSQL Service for Order Service
  postgres-order-service:
    image: postgres
    container_name: postgres-order-service
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: order
      POSTGRES_USER: ${POSTGRES_ORDER_ROOT_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_ORDER_ROOT_PASSWORD}
      PGDATA: /data/postgres
    volumes:
      - ./postgres-order-service:/data/postgres
    restart: always

  # MongoDB Service for Product Service
  mongo-product-service:
    image: mongo
    container_name: mongo-product-service
    ports:
      - "27017:27017"
    volumes:
      - ./mongo-product-service:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_PRODUCT_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PRODUCT_ROOT_PASSWORD}
    restart: always

  # PostgreSQL Service for Keycloak
  postgres-keycloak:
    image: postgres
    container_name: postgres-keycloak
    ports:
      - "5434:5432"
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: ${POSTGRES_KEYCLOAK_ROOT_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_KEYCLOAK_PASSWORD}
      POSTGRES_ROOT_PASSWORD: ${POSTGRES_KEYCLOAK_ROOT_PASSWORD}
      PGDATA: /data/postgres
    volumes:
      - ./keycloak-postgres-data:/data/postgres

  # Keycloak Service
  keycloak:
    image: quay.io/keycloak/keycloak
    container_name: keycloak
    command: [ "start-dev", "--import-realm" ]
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: postgres
      DB_DATABASE: keycloak
      DB_USER: ${KEYCLOAK_DB_USER}
      DB_PASSWORD: ${KEYCLOAK_DB_PASSWORD}
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
    ports:
      - "8080:8080"
    volumes:
      - ./realms/:/opt/keycloak/data/import/
    depends_on:
      - postgres-keycloak

  # Zipkin Service
  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"

  ## Eureka Server
  discovery-server:
    image: aamirxshaikh/discovery-server:latest
    container_name: discovery-server
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - zipkin

  api-gateway:
    image: aamirxshaikh/api-gateway:latest
    container_name: api-gateway
    ports:
      - "8181:8080"
    expose:
      - "8181"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - zipkin
      - discovery-server
      - keycloak

  ## Product-Service Docker Compose Config
  product-service:
    image: aamirxshaikh/product-service:latest
    container_name: product-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - mongo-product-service
      - discovery-server
      - api-gateway

  ## Order-Service Docker Compose Config
  order-service:
    image: aamirxshaikh/order-service:latest
    container_name: order-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - postgres-order-service
      - kafka
      - zipkin
      - discovery-server
      - api-gateway